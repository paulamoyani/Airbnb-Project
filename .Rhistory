View(calendar)
calendar[special_date=1,,by=date]
calendar[special_date=1,special:=date,by=date]
dates=calendar[special_date,by=date]
dates=calendar[,special_date,by=date]
View(dates)
dates=calendar[,special_date,by=uniqueN(date)]
dates=calendar[special_date==1,special_date,by=date]
View(dates)
petro=uniqueN(dates$date)
petro
View(dates)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
calendar[,special_date:=ifelse(price1>1.5*mean(price1),1,0),by=listing_id]
dates=calendar[special_date==1,special_date,by=date]
petro=uniqueN(dates$date)
petro
View(dates)
petro=unique(dates,by="date")
View(petro)
calendar[,special_date:=ifelse(price1>1.5*mean(calendar[price1,by=listing_id]),1,0),]
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$date, data = calendar, FUN = mean)
View(Stats)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
calendar[,special_date:=ifelse(price1>1.5*mean(price1),1,0),]
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = mean)
View(Stats)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = mean)
setDT(Stats)
complete_data <- merge.data.frame(stats, calendar],
by = 'listing_id',
all.x = TRUE)
complete_data <- merge.data.frame(stats, calendar,
by = 'listing_id',
all.x = TRUE)
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
complete_data[,special_date:=ifelse(price1>1.4*mean(price1),1,0),]
View(complete_data)
complete_data[,special_date:=ifelse(price1>1.4*mean(calendar$price1),1,0),]
complete_data[,special_date=ifelse(price1>1.4*mean(calendar$price1),1,0),]
complete_data[special_date=ifelse(price1>1.4*mean(calendar$price1),1,0),]
setDT(complete_data)
complete_data[,special_date=ifelse(price1>1.4*mean(calendar$price1),1,0),]
setnames(Stats,"calendar$price1","average_price")
complete_data[,special_date:=ifelse(price1>1.4*mean(average_price),1,0),]
View(complete_data)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = mean)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","average_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.4*mean(average_price),1,0),]
View(complete_data)
special_data=complete_data[special_date==1]
petro=unique(special_data,by="date")
View(petro)
View(special_data)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = mean)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","average_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.5*mean(average_price),1,0),]
special_data=complete_data[special_date==1]
petro=unique(special_data,by="date")
dates=calendar[special_date==1,special_date,by=date]
petro
petro=uniqueN(special_date$date)
uniqueN(special_date$date)
uniqueN(special_data$date)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = mean)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","average_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.5*average_price,1,0),]
special_data=complete_data[special_date==1]
uniqueN(special_data$date)
View(special_data)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = mean)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","average_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>2*average_price,1,0),]
special_data=complete_data[special_date==1]
uniqueN(special_data$date)
View(calendar)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","average_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.4*average_price,1,0),]
special_data=complete_data[special_date==1]
uniqueN(special_data$date)
View(Stats)
View(complete_data)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","median_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.6*average_price,1,0),]
complete_data[,special_date:=ifelse(price1>1.6*median_price,1,0),]
special_data=complete_data[special_date==1]
uniqueN(special_data$date)
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
View(hack)
hack_1 <- hack[special_date_sum>=30]
setnames(hack,"special_data$special_date","special_date_sum")
hack_1 <- hack[special_date_sum>=30]
View(hack)
setDT(hack)
hack_1 <- hack[special_date_sum>=30]
uniqueN(special_data$date)
setnames(hack,"special_data$date","date")
uniqueN(hack_1$date)
setDT(hack)
hack_1 <- hack[special_date_sum>=30]
uniqueN(hack_1$date)
View(hack_1)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","median_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.6*median_price,1,0),]
special_data=complete_data[special_date==1]
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
setnames(hack,"special_data$special_date","special_date_sum")
setnames(hack,"special_data$date","date")
setDT(hack)
hack_1 <- hack[special_date_sum>=50]
uniqueN(hack_1$date)
View(hack_1)
library(dplyr)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","median_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>2*median_price,1,0),]
special_data=complete_data[special_date==1]
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
setnames(hack,"special_data$special_date","special_date_sum")
setnames(hack,"special_data$date","date")
setDT(hack)
hack_1 <- hack[special_date_sum>=50]
uniqueN(hack_1$date)
complete_data[,special_date:=ifelse(price1>1.5*median_price,1,0),]
special_data=complete_data[special_date==1]
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
setnames(hack,"special_data$special_date","special_date_sum")
setnames(hack,"special_data$date","date")
setDT(hack)
hack_1 <- hack[special_date_sum>=50]
uniqueN(hack_1$date)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","median_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.5*median_price,1,0),]
special_data=complete_data[special_date==1]
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
setnames(hack,"special_data$special_date","special_date_sum")
setnames(hack,"special_data$date","date")
setDT(hack)
hack_1 <- hack[special_date_sum>=60]
uniqueN(hack_1$date)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","median_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.5*median_price,1,0),]
special_data=complete_data[special_date==1]
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
setnames(hack,"special_data$special_date","special_date_sum")
setnames(hack,"special_data$date","date")
setDT(hack)
hack_1 <- hack[special_date_sum>=60]
uniqueN(hack_1$date)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","median_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.7*median_price,1,0),]
special_data=complete_data[special_date==1]
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
setnames(hack,"special_data$special_date","special_date_sum")
setnames(hack,"special_data$date","date")
setDT(hack)
hack_1 <- hack[special_date_sum>=60]
uniqueN(hack_1$date)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","median_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.6*median_price,1,0),]
special_data=complete_data[special_date==1]
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
setnames(hack,"special_data$special_date","special_date_sum")
setnames(hack,"special_data$date","date")
setDT(hack)
hack_1 <- hack[special_date_sum>=60]
uniqueN(hack_1$date)
library(dplyr)
library(data.table)
##################
#load the Datasets
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,#factors:"male","female"(you see strings but internally these are numbers)
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
#Stats[]
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","median_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.6*median_price,1,0),]
special_data=complete_data[special_date==1]
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
setnames(hack,"special_data$special_date","special_date_sum")
setnames(hack,"special_data$date","date")
setDT(hack)
important_dates <- hack[special_date_sum>=60]
uniqueN(important_dates$date)
setDT(important_dates)
View(important_dates)
important_dates[,special_date_sum=NULL,]
important_dates[,special_date_sum=NULL]
important_dates[special_date_sum=NULL]
important_dates[,special_date_sum="NULL",]
important_dates[,special_date_sum:=NULL,]
write.csv(important_dates,file = "Important_dates")
library(dplyr)
library(data.table)
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","median_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.6*median_price,1,0),]
special_data=complete_data[special_date==1]
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
setnames(hack,"special_data$special_date","special_date_sum")
setnames(hack,"special_data$date","date")
setDT(hack)
important_dates <- hack[special_date_sum>=60]
uniqueN(important_dates$date)
setDT(important_dates)
important_dates[,special_date_sum:=NULL,]
write.csv(important_dates,file = "Important_dates")
write.csv(important_dates,file = "Important_dates.csv")
setwd("C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project")
library(dplyr)
library(data.table)
calendar= fread(file='C:/Users/User/Desktop/Term 2 MIBA/Data Driven Transformation/Challenge/Airbnb-Project/calendar_cleaned.csv',
header=TRUE,
sep = ",",
stringsAsFactors = FALSE,
dec=".")
calendar[,available:=NULL]
Stats <- aggregate(calendar$price1 ~ calendar$listing_id, data = calendar, FUN = median)
setDT(Stats)
setnames(Stats,"calendar$listing_id","listing_id")
setnames(Stats,"calendar$price1","median_price")
complete_data <- merge.data.frame(Stats, calendar,
by = 'listing_id',
all.x = TRUE)
setDT(complete_data)
complete_data[,special_date:=ifelse(price1>1.6*median_price,1,0),]
special_data=complete_data[special_date==1]
hack <- aggregate(special_data$special_date ~ special_data$date, data = calendar, FUN = sum)
setnames(hack,"special_data$special_date","special_date_sum")
setnames(hack,"special_data$date","date")
setDT(hack)
important_dates <- hack[special_date_sum>=60]
uniqueN(important_dates$date)
setDT(important_dates)
important_dates[,special_date_sum:=NULL,]
write.csv(important_dates,file = "Important_dates.csv")
